{"version":3,"sources":["../common/lib/vector2d.js","index.js"],"names":["Vector2D","x","y","v","a","scale","length","rad","c","Math","cos","s","sin","hypot","atan2","Array","canvas","document","querySelector","ctx","getContext","translate","height","lineCap","drawBranch","context","v0","thickness","dir","bias","rotate","v1","copy","add","lineWidth","beginPath","moveTo","lineTo","stroke","left","PI","random","right","save","strokeStyle","th","restore"],"mappings":"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","file":"02_vector_tree.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export class Vector2D extends Array {\r\n    constructor(x = 1, y = 0) {\r\n      super(x, y);\r\n    }\r\n  \r\n    set x(v) {\r\n      this[0] = v;\r\n    }\r\n  \r\n    set y(v) {\r\n      this[1] = v;\r\n    }\r\n  \r\n    get x() {\r\n      return this[0];\r\n    }\r\n  \r\n    get y() {\r\n      return this[1];\r\n    }\r\n  \r\n    get length() {\r\n      return Math.hypot(this.x, this.y);\r\n    }\r\n  \r\n    get dir() {\r\n      return Math.atan2(this.y, this.x);\r\n    }\r\n  \r\n    copy() {\r\n      return new Vector2D(this.x, this.y);\r\n    }\r\n  \r\n    add(v) {\r\n      this.x += v.x;\r\n      this.y += v.y;\r\n      return this;\r\n    }\r\n  \r\n    sub(v) {\r\n      this.x -= v.x;\r\n      this.y -= v.y;\r\n      return this;\r\n    }\r\n  \r\n    scale(a) {\r\n      this.x *= a;\r\n      this.y *= a;\r\n      return this;\r\n    }\r\n  \r\n    cross(v) {\r\n      return this.x * v.y - v.x * this.y;\r\n    }\r\n  \r\n    dot(v) {\r\n      return this.x * v.x + v.y * this.y;\r\n    }\r\n  \r\n    normalize() {\r\n      return this.scale(1 / this.length);\r\n    }\r\n  \r\n    rotate(rad) {\r\n      const c = Math.cos(rad),\r\n        s = Math.sin(rad);\r\n      const [x, y] = this;\r\n  \r\n      this.x = x * c + y * -s;\r\n      this.y = x * s + y * c;\r\n  \r\n      return this;\r\n    }\r\n  }","import {Vector2D} from '../common/lib/vector2d.js';\r\n\r\nconst canvas = document.querySelector('canvas');\r\nconst ctx = canvas.getContext('2d');\r\n\r\nctx.translate(0, canvas.height);\r\nctx.scale(1, -1);\r\nctx.lineCap = 'round';\r\n\r\nfunction drawBranch(context, v0, length, thickness, dir, bias) {\r\n  const v = new Vector2D().rotate(dir).scale(length);\r\n  const v1 = v0.copy().add(v);\r\n\r\n  context.lineWidth = thickness;\r\n  context.beginPath();\r\n  context.moveTo(...v0);\r\n  context.lineTo(...v1);\r\n  context.stroke();\r\n\r\n  if(thickness > 2) {\r\n    const left = Math.PI / 4 + 0.5 * (dir + 0.2) + bias * (Math.random() - 0.5);\r\n    drawBranch(context, v1, length * 0.9, thickness * 0.8, left, bias * 0.9);\r\n    const right = Math.PI / 4 + 0.5 * (dir - 0.2) + bias * (Math.random() - 0.5);\r\n    drawBranch(context, v1, length * 0.9, thickness * 0.8, right, bias * 0.9);\r\n  }\r\n\r\n  if(thickness < 5 && Math.random() < 0.3) {\r\n    context.save();\r\n    context.strokeStyle = '#c72c35';\r\n    const th = Math.random() * 6 + 3;\r\n    context.lineWidth = th;\r\n    context.beginPath();\r\n    context.moveTo(...v1);\r\n    context.lineTo(v1.x, v1.y - 2);\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n}\r\n\r\nconst v0 = new Vector2D(256, 0);\r\ndrawBranch(ctx, v0, 50, 10, Math.PI/2, 3);"]}